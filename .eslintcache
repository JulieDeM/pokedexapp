[{"/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/App.js":"1","/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/components/Home/Home.js":"2","/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/components/Pokemon/Pokemon.js":"3","/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/reportWebVitals.js":"4","/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/components/PokemonDetails/PokemonDetails.js":"5","/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/components/Header/Header.js":"6","/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/index.js":"7"},{"size":693,"mtime":1609984940617,"results":"8","hashOfConfig":"9"},{"size":8322,"mtime":1611632537693,"results":"10","hashOfConfig":"9"},{"size":4182,"mtime":1611348687038,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1609186331399,"results":"12","hashOfConfig":"9"},{"size":3295,"mtime":1610133166376,"results":"13","hashOfConfig":"9"},{"size":637,"mtime":1609984916722,"results":"14","hashOfConfig":"9"},{"size":500,"mtime":1609186331399,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3ceo4u",{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/App.js",[],["32","33"],"/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/components/Home/Home.js",["34","35","36","37","38","39"],"/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/components/Pokemon/Pokemon.js",["40"],"import React from 'react';\nimport './Pokemon.css';\nimport {\n    BrowserRouter as Router,\n    withRouter,\n    Link,\n  } from \"react-router-dom\";\n\nclass Pokemon extends React.Component {\n\n    renderTableHeader = () => {\n        // @ToDO: Make dynamic, IF time \n        return (\n          <>\n            <th>Name</th>\n            <th>Number</th>\n            <th>Type</th>\n            <th>Weakness</th>\n            <th></th>\n          </>\n        )\n      };\n\n      renderTableData = () => {\n        return this.props.pokemons.map(pokemon => {\n          const { id, name, num, type, weaknesses, img, height, weight, prev_evolution, next_evolution } = pokemon;\n          return (\n              <tr key={id}  >\n                <td>{name}</td>\n                <td>{num}</td>\n                <td >{type && type.map(type => \n                        <ul key={type} className={type}>{type }</ul>) \n                }</td>\n                <td >{ \n                    weaknesses && weaknesses.map(weak => \n                        <ul key={weak} className={weak}>{weak}</ul>)\n                }</td>\n                <td>\n                    <Link \n                    to={{\n                      pathname: `/pokemon/${num}`,\n                      state: {\n                       id, name, num, type, weaknesses,img, height, weight, prev_evolution, next_evolution \n                      }\n                    }}\n                    className=\"details\">Details</Link>\n                </td>\n              </tr>\n          )\n        })\n      };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n        <div className=\"table-container\">\n            <table id=\"pokemon\">\n            <tbody >\n                <tr>\n                {this.renderTableHeader()}\n                </tr>\n                {this.renderTableData()}\n            </tbody>\n            </table>\n            {this.props.pokemons.length === 0 && (\n             <p className=\"noResults\">There are no matches for your search, please try again</p>\n            )}\n        <div className='pagination'>\n          {this.props.pagesNeeded && this.props.pagesNeeded.map(num => {\n            let activePage = this.props.currentPage === num ? 'active' : '';\n            return (\n              <span key={num} className={activePage} onClick={() => this.props.changePage(num)}>{num}</span>\n            );\n          })}\n          </div>\n          </div>\n            <div className=\"filter-container\">\n              <div className=\"filter-heading\">\n                <h1 className=\"filter-title\">Filters</h1>\n              </div>\n                <h2 className=\"filter-title\">Type</h2>\n                <span className=\"filter-section\">\n                  {this.props.typeArray.map(type => {\n                    return (\n                    <span className=\"checkbox-label\" key={type}>\n                    <input \n                     type=\"checkbox\" \n                     id={type} \n                     name={type}\n                     checked={this.props.checkedItemsType.get(type)}\n                     onChange={this.props.handleChange}\n                     />\n                     <label className=\"checkbox-labels\" htmlFor={type}>{type}</label>\n                     </span>\n                    )\n                  })}\n                </span>\n                <h2 className=\"filter-title\">Weaknesses</h2>\n                <span className=\"filter-section\">\n                  {this.props.weaknessesArray.map(weakness => {\n                    return (\n                    <span className=\"checkbox-label\" key={weakness}>\n                    <input \n                     type=\"checkbox\" \n                     id={weakness} \n                     name={weakness}\n                     checked={this.props.checkedItemsWeaknesses.get(weakness)}\n                     onChange={this.props.handleChangeWeaknesses}\n                     />\n                     <label className=\"checkbox-labels\" htmlFor={weakness}>{weakness}</label>\n                     </span>\n                    )\n                  })}\n                </span>\n                \n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n \nexport default withRouter(Pokemon);","/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/reportWebVitals.js",[],"/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/components/PokemonDetails/PokemonDetails.js",[],"/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/components/Header/Header.js",[],"/Users/juliedemasters/Documents/CodingChallenges/pokedexapp/src/index.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":102,"column":69,"nodeType":"47","messageId":"48","endLine":102,"endColumn":71},{"ruleId":"45","severity":1,"message":"46","line":146,"column":69,"nodeType":"47","messageId":"48","endLine":146,"endColumn":71},{"ruleId":"45","severity":1,"message":"49","line":190,"column":28,"nodeType":"47","messageId":"48","endLine":190,"endColumn":30},{"ruleId":"45","severity":1,"message":"50","line":195,"column":17,"nodeType":"51","messageId":"52","endLine":195,"endColumn":24},{"ruleId":"45","severity":1,"message":"49","line":203,"column":40,"nodeType":"47","messageId":"48","endLine":203,"endColumn":42},{"ruleId":"45","severity":1,"message":"50","line":207,"column":17,"nodeType":"51","messageId":"52","endLine":207,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":4,"column":22,"nodeType":"55","messageId":"56","endLine":4,"endColumn":28},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]